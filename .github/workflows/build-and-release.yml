name: Build and Release JAR

on:
  push:
    tags:
      - 'v*' # 只有打上 tag 時才觸發 release 流程

# Build Stage
jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        java-version: ['23']
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK ${{ matrix.java-version }}
        uses: actions/setup-java@v4
        with:
          java-version: ${{ matrix.java-version }}
          distribution: 'temurin'

      - name: Print Java Version
        run: | 
          java -version
          javac -version

      - name: Print Maven Version
        run: mvn -v

      - name: Build with Maven
        run: mvn clean package

  # Release Stage
  release:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 23
        uses: actions/setup-java@v4
        with:
          java-version: '23'
          distribution: 'temurin'

      - name: Build with Maven
        run: mvn clean package

      - name: Locate JAR file
        id: locate-jar
        run: |          
          JAR_NAME=$(ls target/*.jar | xargs basename)
          echo "JAR_NAME=$JAR_NAME" >> $GITHUB_ENV

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.RELEASE_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

      - name: Upload JAR as Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.RELEASE_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./target/${{ env.JAR_NAME }}
          asset_name: ${{ env.JAR_NAME }}
          asset_content_type: application/java-archive